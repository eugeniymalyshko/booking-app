
generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Reservations {
	id Int @id @default(autoincrement())
	first_name String
	last_name String
	created_at DateTime @default(now())
}

// model Restaurant {
//   id                Int      @id @default(autoincrement())
//   name              String
//   timeSlotsMinutes  Int      @default(120)
//   areas             Area[]
//   tables            Table[]
//   reservations      Reservation[]
//   customers         Customer[]
//   createdAt         DateTime @default(now())
//   updatedAt         DateTime @updatedAt

//   @@map("restaurants")
// }

// model Area {
//   id             Int      @id @default(autoincrement())
//   restaurantId   Int
//   name           String
//   restaurant     Restaurant @relation(fields: [restaurantId], references: [id], onDelete: Cascade)
//   tables         Table[]
//   createdAt      DateTime @default(now())
//   updatedAt      DateTime @updatedAt

//   @@map("areas")
// }

// model Table {
//   id               Int      @id @default(autoincrement())
//   restaurantId     Int
//   areaId           Int
//   label            String
//   name             String?
//   capacity         Int
//   turnoverMinutes  Int?
//   isActive         Boolean  @default(true)
//   positionX        Float
//   positionY        Float
//   restaurant       Restaurant @relation(fields: [restaurantId], references: [id], onDelete: Cascade)
//   area             Area     @relation(fields: [areaId], references: [id], onDelete: Cascade)
//   reservationTables ReservationTable[]
//   createdAt        DateTime @default(now())
//   updatedAt        DateTime @updatedAt

//   @@map("tables")
// }

// model Reservation {
//   id           Int      @id @default(autoincrement())
//   restaurantId Int
//   name         String
//   phone        String
//   startAt      DateTime
//   endAt        DateTime?
//   durationMin  Int      @default(120)
//   status       String   @default("Очікує підтвердження")
//   restaurant   Restaurant @relation(fields: [restaurantId], references: [id], onDelete: Cascade)
//   reservationTables ReservationTable[]
//   createdAt    DateTime @default(now())
//   updatedAt    DateTime @updatedAt

//   @@map("reservations")
// }

// model ReservationTable {
//   id             Int         @id @default(autoincrement())
//   reservationId  Int
//   tableId        Int
//   reservation    Reservation @relation(fields: [reservationId], references: [id], onDelete: Cascade)
//   table          Table       @relation(fields: [tableId], references: [id], onDelete: Cascade)
//   createdAt      DateTime    @default(now())
//   updatedAt      DateTime    @updatedAt

//   @@unique([reservationId, tableId])
//   @@map("reservation_tables")
// }

// model Customer {
//   id             Int      @id @default(autoincrement())
//   restaurantId   Int
//   fullName       String
//   phone          String
//   restaurant     Restaurant @relation(fields: [restaurantId], references: [id], onDelete: Cascade)
//   createdAt      DateTime @default(now())
//   updatedAt      DateTime @updatedAt

//   @@map("customers")
// }
